#!/usr/bin/env ruby
require 'optparse'
require_relative '../lib/config'
require 'shellwords'

options = {}

case ARGV.shift
when 'config'
  options[:cmd] = 'config'
  case ARGV.shift
  when 'set'
    options[:subcmd] = 'set'
    key = ARGV.shift
    value = ARGV.join ' '
    options[:key] = key
    options[:val] = value

    write_config_entry options[:key], options[:val]
  when 'get'
    options[:subcmd] = 'get'
    key = ARGV.shift
    options[:key] = key

    val = read_config_entry options[:key]
    puts "Config for #{options[:key]} is #{val}"
  when 'help'
    puts '
Usage: mg config [subcommand] ...
Commands:
 get KEY
 set KEY VALUE
'
    exit
  else
    puts "Unrecognized #{options[:cmd]} command"
    exit -1
  end
when 'help', '--help', '-h', '-?'
  puts '
Usage: mg [command] [subcommand] ...
Commands:
 config
 help
'
  exit
when 'shell', 's'
  options[:cmd] = 'shell'
  m_uri = read_config_entry 'uri'
  if m_uri.nil?
    puts 'URI not found in config.
Must set URI with: mg config set uri YOUR_URI_HERE
Example: mg config set uri \'mongodb://username:password@localhost:27017\'
'
    exit
  end
  remaining_cmds = ARGV.map{|arg| Shellwords.escape arg}.join ' '
  cmdstr = "mongo #{m_uri} #{remaining_cmds}"
  exec(cmdstr)
# when 'echo'
#   remaining_cmds = ARGV.map{|arg| Shellwords.escape arg}.join ' '
#   puts remaining_cmds
#   exec("echo #{remaining_cmds}")
else
  puts 'Unrecognized command'
  exit -1
end


